// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TimApp.Persistence.Context;

#nullable disable

namespace TimApp.Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TimApp.Domain.Entities.Book", b =>
                {
                    b.Property<string>("ISBN")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("ISBN");

                    b.HasIndex(new[] { "Author" }, "IX_Author");

                    b.HasIndex(new[] { "Name" }, "IX_Name");

                    b.HasIndex(new[] { "Name", "Author" }, "IX_Name_Author");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("TimApp.Domain.Entities.BookTransaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("DelayPenaltyFee")
                        .HasColumnType("float");

                    b.Property<DateTime?>("DeliveredDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RelatedISBN")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("RelatedMemberId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "RelatedISBN" }, "IX_RelatedISBN");

                    b.HasIndex(new[] { "RelatedMemberId" }, "IX_RelatedMemberId");

                    b.HasIndex(new[] { "RelatedMemberId", "RelatedISBN" }, "IX_RelatedMemberId_RelatedISBN");

                    b.ToTable("BookTransactions");
                });

            modelBuilder.Entity("TimApp.Domain.Entities.Member", b =>
                {
                    b.Property<string>("MemberId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("MemberId");

                    b.ToTable("Members");
                });

            modelBuilder.Entity("TimApp.Domain.Entities.BookTransaction", b =>
                {
                    b.HasOne("TimApp.Domain.Entities.Book", "Book")
                        .WithMany("BookTransactions")
                        .HasForeignKey("RelatedISBN")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_books");

                    b.HasOne("TimApp.Domain.Entities.Member", "Member")
                        .WithMany("BookTransactions")
                        .HasForeignKey("RelatedMemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_members");

                    b.Navigation("Book");

                    b.Navigation("Member");
                });

            modelBuilder.Entity("TimApp.Domain.Entities.Book", b =>
                {
                    b.Navigation("BookTransactions");
                });

            modelBuilder.Entity("TimApp.Domain.Entities.Member", b =>
                {
                    b.Navigation("BookTransactions");
                });
#pragma warning restore 612, 618
        }
    }
}
